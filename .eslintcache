[{"/home/vainaweb23/Documentos/netflix-clone/src/App.js":"1","/home/vainaweb23/Documentos/netflix-clone/src/server/index.js":"2","/home/vainaweb23/Documentos/netflix-clone/src/server/data/shows.js":"3","/home/vainaweb23/Documentos/netflix-clone/src/server/data/movies.js":"4","/home/vainaweb23/Documentos/netflix-clone/src/index.js":"5"},{"size":3349,"mtime":1607679297678,"results":"6","hashOfConfig":"7"},{"size":866,"mtime":1606827824074,"results":"8","hashOfConfig":"7"},{"size":13929,"mtime":1606741772004,"results":"9","hashOfConfig":"7"},{"size":13969,"mtime":1606741772004,"results":"10","hashOfConfig":"7"},{"size":294,"mtime":1606741772004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"6w0bgf",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/home/vainaweb23/Documentos/netflix-clone/src/App.js",["26","27","28","29","30","31","32","33","34","35"],"// Libs\nimport React, { Component } from \"react\";\nimport './App.css';\nimport './index.css';\nimport axios from 'axios'\n\n\nclass NetFlix extends Component {\n\n  state = {\n    movies: [],\n    shows: [],\n    \n  }\n\n  async componentDidMount(){\n\n     const responseMovies = await axios.get(`${process.env.REACT_APP_API}/movies`);\n     console.log(responseMovies.data);\n\n     const responseShows = await axios.get(`${process.env.REACT_APP_API}/shows`);\n     console.log(responseShows.data);\n\n     this.setState({\n       movies: responseMovies.data\n     });\n\n     this.setState({\n      shows: responseShows.data\n    });\n\n    const movies = responseMovies.data.map((item) => {\n      return  {\n\n        ...item,\n        poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n      };\n    });\n      this.setState({\n        movies: movies\n      });\n      const shows = responseShows.data.map((item) => {\n        return  {\n  \n          ...item,\n          poster_path: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n        };\n      });\n      this.setState({\n        shows: shows\n      });\n    }\n\n\n  render() {\n    return ( \n\n     \n        \n      <div className= \"box-geral\">\n\n        <header>\n          <div class=\"center\">\n            <div class=\"header-left\">\n            <a href=\"\"><img src=\"https://img.icons8.com/ios/452/netflix.png\" /></a>\n            <div class=\"menu-header\">\n              <ul>\n                <li><a href=\"\">inicio</a></li>\n                <li><a href=\"\">filmes</a></li>\n                <li><a href=\"\">s√©ries</a></li>\n                <li><a href=\"\">favoritos</a></li>\n              </ul>\n              </div>\n            </div>\n            \n            <div class=\"header-right\"> \n            <div>  \n            <a href=\"\"><img class=\"fot\" src=\"https://cdn.iconscout.com/icon/free/png-256/google-search-555271.png\" /></a>\n            </div>\n            </div>\n            \n            \n            <div class=\"clear\"></div>\n          </div>  \n        </header>\n\n          <div className= \"conteiner\">\n             {this.state.movies.map((item,index) => (\n            <div  className=\"box_content\"  key= {index}>\n              <p  className=\"netflixTitles\">{item.title}</p>\n              <div class= \"box-descricao\">\n              <p className= \"let\">{item.overview}</p>\n              <p className=\"releaseDate_now\">{item.release_date}</p>\n              \n              \n              </div>\n              <div className=\"box-imagem\">\n              <img className=\"netflixImages\" src={item.poster_path} />\n              </div>\n             </div>\n             \n           ))}\n          </div>\n            <div className= \"conteiner\">\n              {this.state.shows.map((item,index) => (\n             <div className=\"box_content\" key={index}>\n              \n               <p className=\"netflixTitles\">{item.original_name}</p>\n                <div class= \"box-descricao\">\n                <p className= \"let\">{item.overview}</p>\n               <p className=\"releaseDate_now\">{item.first_air_date}</p>\n              \n               </div>\n               <div className=\"box-imagem\">\n               <img className=\"netflixImages\" src={item.poster_path} />\n               </div>\n             </div>\n           ))}\n          \n        </div>\n        \n        </div>\n         \n      );\n    }\n  }\n\n\n    \n\nexport default NetFlix;\n",["36","37"],"/home/vainaweb23/Documentos/netflix-clone/src/server/index.js",[],["38","39"],"/home/vainaweb23/Documentos/netflix-clone/src/server/data/shows.js",[],"/home/vainaweb23/Documentos/netflix-clone/src/server/data/movies.js",[],"/home/vainaweb23/Documentos/netflix-clone/src/index.js",[],["40","41"],{"ruleId":"42","severity":1,"message":"43","line":65,"column":13,"nodeType":"44","endLine":65,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":65,"column":24,"nodeType":"44","endLine":65,"endColumn":80},{"ruleId":"42","severity":1,"message":"43","line":68,"column":21,"nodeType":"44","endLine":68,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":69,"column":21,"nodeType":"44","endLine":69,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":70,"column":21,"nodeType":"44","endLine":70,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":71,"column":21,"nodeType":"44","endLine":71,"endColumn":32},{"ruleId":"42","severity":1,"message":"43","line":78,"column":13,"nodeType":"44","endLine":78,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":78,"column":24,"nodeType":"44","endLine":78,"endColumn":118},{"ruleId":"45","severity":1,"message":"46","line":98,"column":15,"nodeType":"44","endLine":98,"endColumn":71},{"ruleId":"45","severity":1,"message":"46","line":115,"column":16,"nodeType":"44","endLine":115,"endColumn":72},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"47","replacedBy":"53"},{"ruleId":"49","replacedBy":"54"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],["55"],["56"],"no-global-assign","no-unsafe-negation"]